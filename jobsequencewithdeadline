#include <stdio.h>
#include <stdlib.h>

struct Job {
    int id, deadline, profit;
};

int cmp(const void *a, const void *b) {
    struct Job *jobA = (struct Job *)a;
    struct Job *jobB = (struct Job *)b;
    return (jobB->profit - jobA->profit);
}

int findMaxDeadline(struct Job jobs[], int n) {
    int maxDeadline = 0;
    for (int i = 0; i < n; i++) {
        if (jobs[i].deadline > maxDeadline) {
            maxDeadline = jobs[i].deadline;
        }
    }
    return maxDeadline;
}

void jobScheduling(struct Job jobs[], int n) {
    qsort(jobs, n, sizeof(struct Job), cmp);
    int maxDeadline = findMaxDeadline(jobs, n);
    int slots[maxDeadline + 1];
    for (int i = 0; i <= maxDeadline; i++) {
        slots[i] = -1;
    }
    int totalProfit = 0;
    for (int i = 0; i < n; i++) {
        for (int j = jobs[i].deadline; j > 0; j--) {
            if (slots[j] == -1) {
                slots[j] = jobs[i].id;
                totalProfit += jobs[i].profit;
                break;
            }
        }
    }
    printf("Job sequence: ");
    for (int i = 1; i <= maxDeadline; i++) {
        if (slots[i] != -1) {
            printf("Job %d ", slots[i]);
        }
    }
    printf("\nTotal profit: %d\n", totalProfit);
}

int main() {
    int n;
    printf("Enter the number of jobs: ");
    scanf("%d", &n);
    struct Job jobs[n];
    printf("Enter the job id, deadline and profit for each job:\n");
    for (int i = 0; i < n; i++) {
        printf("Job %d:\n", i + 1);
        printf("ID: ");
        scanf("%d", &jobs[i].id);
        printf("Deadline: ");
        scanf("%d", &jobs[i].deadline);
        printf("Profit: ");
        scanf("%d", &jobs[i].profit);
    }
    jobScheduling(jobs, n);
    return 0;
}
